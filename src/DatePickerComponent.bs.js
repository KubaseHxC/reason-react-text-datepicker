// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var TextInput$ReactHooksTemplate = require("./TextInput.bs.js");

function getDaysInMonth(month, year) {
  switch (month) {
    case 1 : 
        var match = year % 4 === 0 || year % 400 === 0;
        if (match) {
          return 29;
        } else {
          return 28;
        }
    case 2 : 
    case 4 : 
    case 6 : 
    case 7 : 
    case 9 : 
        return 31;
    case 3 : 
    case 5 : 
    case 8 : 
    case 10 : 
        return 30;
    default:
      return 31;
  }
}

function isAValidPartialDate(day, month, year) {
  var fixedMonth = month - 1 | 0;
  if (fixedMonth >= 0 && fixedMonth < 12 && day > 0) {
    return day <= getDaysInMonth(fixedMonth, year);
  } else {
    return false;
  }
}

function isValidDate(value) {
  var dateWrapper = new Date(value);
  return isNaN(dateWrapper.valueOf());
}

function getInitialDate(value) {
  if (value !== undefined) {
    var value$1 = value;
    var match = isValidDate(value$1);
    if (match) {
      return new Date(value$1);
    } else {
      return new Date();
    }
  } else {
    return new Date();
  }
}

function DatePickerComponent(Props) {
  var props = Props.props;
  var dateValue = getInitialDate(props[/* value */0]);
  var match = React.useState((function () {
          return dateValue.getDay() | 0;
        }));
  var setDay = match[1];
  var match$1 = React.useState((function () {
          return dateValue.getMonth() + 1.0 | 0;
        }));
  var setMonth = match$1[1];
  var match$2 = React.useState((function () {
          return dateValue.getFullYear() | 0;
        }));
  var setYear = match$2[1];
  var onInputChange = function ($$event) {
    var target = $$event.target;
    var value = target.value;
    var name = target.name;
    switch (name) {
      case "day-input" : 
          Curry._1(setDay, (function (param) {
                  return Caml_format.caml_int_of_string(value);
                }));
          break;
      case "month-input" : 
          Curry._1(setMonth, (function (param) {
                  return Caml_format.caml_int_of_string(value) + 1 | 0;
                }));
          break;
      case "year-input" : 
          Curry._1(setYear, (function (param) {
                  return Caml_format.caml_int_of_string(value);
                }));
          break;
      default:
        throw [
              Caml_builtin_exceptions.match_failure,
              /* tuple */[
                "DatePickerComponent.re",
                65,
                12
              ]
            ];
    }
    console.log(value + name);
    return /* () */0;
  };
  var match$3 = props[/* hints */1];
  var match$4 = props[/* hints */1];
  var match$5 = props[/* hints */1];
  return React.createElement("span", {
              className: "rtdp"
            }, React.createElement("span", {
                  className: "rtdp-inner"
                }, React.createElement(TextInput$ReactHooksTemplate.make, {
                      props: /* record */[
                        /* className */"rtdp-day",
                        /* hintText */match$3 ? props[/* dayHint */2] : "",
                        /* value */String(match[0]),
                        /* maxLength */2,
                        /* name */"day-input",
                        /* onInputChange */onInputChange
                      ]
                    }), React.createElement(TextInput$ReactHooksTemplate.make, {
                      props: /* record */[
                        /* className */"rtdp-month",
                        /* hintText */match$4 ? props[/* monthHint */3] : "",
                        /* value */String(match$1[0]),
                        /* maxLength */2,
                        /* name */"month-input",
                        /* onInputChange */onInputChange
                      ]
                    }), React.createElement(TextInput$ReactHooksTemplate.make, {
                      props: /* record */[
                        /* className */"rtdp-year",
                        /* hintText */match$5 ? props[/* yearHint */4] : "",
                        /* value */String(match$2[0]),
                        /* maxLength */4,
                        /* name */"year-input",
                        /* onInputChange */onInputChange
                      ]
                    })));
}

var make = DatePickerComponent;

exports.getDaysInMonth = getDaysInMonth;
exports.isAValidPartialDate = isAValidPartialDate;
exports.isValidDate = isValidDate;
exports.getInitialDate = getInitialDate;
exports.make = make;
/* react Not a pure module */
